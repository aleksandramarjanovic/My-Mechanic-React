{"version":3,"sources":["utils.js","PaymentForm.js","MechanicDetails.js","Map.js","StartMechanic.js","App.js","reportWebVitals.js","index.js"],"names":["clearNumber","value","replace","PaymentForm","props","handleCallback","isValid","issuer","setState","handleInputFocus","target","focused","name","handleInputChange","nextValue","Payment","fns","cardType","clearValue","slice","trim","formatCreditCardNumber","length","formatExpirationDate","prevValue","allValues","maxLength","number","formatCVC","handleSubmit","e","preventDefault","formData","elements","filter","d","reduce","acc","save","clearEntries","form","reset","expiry","cvc","state","id","bind","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","paymentResponse","alert","success","catch","data","this","callback","ref","c","onSubmit","type","className","placeholder","pattern","required","onChange","onFocus","onClick","cancelPayment","Object","keys","map","i","React","Component","MechanicDetails","mechanic","src","alt","address","description","phoneNumber","showPayment","price","Map","mechanics","mapPosition","lat","lng","markerPosition","navigator","geolocation","getCurrentPosition","position","parseFloat","coords","latitude","longitude","mechanic1","mechanicDetails","ReactDOM","render","document","getElementById","MapWithAMarker","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","icon","url","scaledSize","window","google","maps","Size","showInfo","googleMapURL","loadingElement","style","height","containerElement","mapElement","StartMechanic","findMechanic","require","App","startMechanicPage","mapPage","event","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.2fd1f8e0.chunk.js","sourcesContent":["import Payment from \"payment\";\r\n\r\nfunction clearNumber(value = \"\") {\r\n  return value.replace(/\\D+/g, \"\");\r\n}\r\n\r\nexport function formatCreditCardNumber(value) {\r\n  if (!value) {\r\n    return value;\r\n  }\r\n\r\n  const issuer = Payment.fns.cardType(value);\r\n  const clearValue = clearNumber(value);\r\n  let nextValue;\r\n\r\n  switch (issuer) {\r\n    case \"amex\":\r\n      nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\r\n        4,\r\n        10\r\n      )} ${clearValue.slice(10, 15)}`;\r\n      break;\r\n    case \"dinersclub\":\r\n      nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\r\n        4,\r\n        10\r\n      )} ${clearValue.slice(10, 14)}`;\r\n      break;\r\n    default:\r\n      nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\r\n        4,\r\n        8\r\n      )} ${clearValue.slice(8, 12)} ${clearValue.slice(12, 19)}`;\r\n      break;\r\n  }\r\n\r\n  return nextValue.trim();\r\n}\r\n\r\nexport function formatCVC(value, prevValue, allValues = {}) {\r\n  const clearValue = clearNumber(value);\r\n  let maxLength = 4;\r\n\r\n  if (allValues.number) {\r\n    const issuer = Payment.fns.cardType(allValues.number);\r\n    maxLength = issuer === \"amex\" ? 4 : 3;\r\n  }\r\n\r\n  return clearValue.slice(0, maxLength);\r\n}\r\n\r\nexport function formatExpirationDate(value) {\r\n  const clearValue = clearNumber(value);\r\n\r\n  if (clearValue.length >= 3) {\r\n    return `${clearValue.slice(0, 2)}/${clearValue.slice(2, 4)}`;\r\n  }\r\n\r\n  return clearValue;\r\n}\r\n\r\nexport function formatFormData(data) {\r\n  return Object.keys(data).map(d => `${d}: ${data[d]}`);\r\n}","import React from \"react\";\r\nimport Card from \"react-credit-cards\";\r\nimport styles from \"./App.css\";\r\nimport {\r\n    formatCreditCardNumber,\r\n    formatCVC,\r\n    formatExpirationDate,\r\n    formatFormData\r\n    } from \"./utils\";\r\nimport \"react-credit-cards/es/styles-compiled.css\";\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nexport default class PaymentForm extends React.Component {\r\n\r\n    constructor(props){\r\n        super (props);\r\n\r\n        this.state = {\r\n            id: props.id,\r\n            number: \"\",\r\n            name: \"\",\r\n            expiry: \"\",\r\n            cvc: \"\",\r\n            focused: \"\"\r\n        };\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleCallback = ({ issuer }, isValid) => {\r\n        if (isValid) {\r\n            this.setState({ issuer });\r\n        }\r\n    };\r\n\r\n    handleInputFocus = ({ target }) => {\r\n        this.setState({\r\n            focused: target.name\r\n        });\r\n    };\r\n\r\n    handleInputChange = ({ target }) => {\r\n        if (target.name === \"number\") {\r\n            target.value = formatCreditCardNumber(target.value);\r\n        } else if (target.name === \"expiry\") {\r\n            target.value = formatExpirationDate(target.value);\r\n        } else if (target.name === \"cvc\") {\r\n            target.value = formatCVC(target.value);\r\n        }\r\n          this.setState({ [target.name]: target.value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const formData = [...e.target.elements]\r\n            .filter(d => d.name)\r\n            .reduce((acc, d) => {\r\n                 acc[d.name] = d.value;\r\n                    return acc;\r\n            }, {});\r\n        this.save(formData);\r\n        this.clearEntries();\r\n        this.form.reset();\r\n    };\r\n\r\n    clearEntries = () => {\r\n        this.setState({\r\n            name: \"\",\r\n            number: \"\",\r\n            expiry: \"\",\r\n            cvc: \"\",\r\n            focused: \"\",\r\n            issuer: \"\",\r\n            formData: \"\",\r\n        })\r\n    }\r\n\r\n    save(formData) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(formData)\r\n        };\r\n        const request = \"/payment\";\r\n        fetch(request, requestOptions)\r\n        .then(response => response.json())\r\n        .then(paymentResponse =>\r\n            alert(\"Payment finished with success = \" + paymentResponse.success)\r\n        )\r\n        .catch((e) => {alert(\"Error in saving record!!!!!\")});\r\n    }\r\n\r\n    render() {\r\n        const { name, number, expiry, cvc, focused, issuer, formData } = this.state;\r\n\r\n            return (\r\n                <div id=\"main\">\r\n                    <div id =\"card\">\r\n                        <Card\r\n                        number={number}\r\n                        name={name}\r\n                        expiry={expiry}\r\n                        cvc={cvc}\r\n                        focused={focused}\r\n                        callback={this.handleCallback}\r\n                    />\r\n                </div>\r\n                    <div>\r\n                        <form id=\"paymentForm\" ref={c => (this.form = c)} onSubmit={this.handleSubmit}  >\r\n                            <input\r\n                                type=\"tel\"\r\n                                name=\"number\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Card Number E.g.: 49..., 51..., 36..., 37...\"\r\n                                pattern=\"[\\d| ]{16,22}\"\r\n                                required\r\n                                onChange={this.handleInputChange}\r\n                                onFocus={this.handleInputFocus}\r\n                            />\r\n                             <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Name\"\r\n                                required\r\n                                onChange={this.handleInputChange}\r\n                                onFocus={this.handleInputFocus}\r\n                             />\r\n\r\n                            <div  id=\"cvv\">\r\n                                <input\r\n                                    type=\"tel\"\r\n                                    name=\"expiry\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Valid Thru: MM/YY\"\r\n                                    pattern=\"(?:0[1-9]|1[0-2])\\/2[1-9]\"\r\n                                    required\r\n                                    onChange={this.handleInputChange}\r\n                                    onFocus={this.handleInputFocus}\r\n                                />\r\n                                <input\r\n                                    type=\"tel\"\r\n                                    name=\"cvc\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"CVC\"\r\n                                    pattern=\"\\d{3}\"\r\n                                    required\r\n                                    onChange={this.handleInputChange}\r\n                                    onFocus={this.handleInputFocus}\r\n                                    />\r\n                            </div>\r\n                                 <input type=\"hidden\" name=\"issuer\" value={issuer} />\r\n                                    <div id=\"buttons\">\r\n                                        <button id=\"pay\" >PAY</button><br/>\r\n                                    </div>\r\n                        </form>\r\n\r\n                        <button id=\"cancelBtn\" onClick={this.props.cancelPayment}>CANCEL</button>\r\n\r\n                    </div>\r\n\r\n                    {formData && (\r\n                        <div className=\"App-highlight\">\r\n                            {formatFormData(formData).map((d, i) => (\r\n                            <div key={i}>{d}</div> ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport PaymentForm from './PaymentForm';\r\n\r\nclass MechanicDetails extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div id=\"info\">\r\n                <div id=\"allAboutMechanic\">\r\n                    <div id=\"title\">\r\n                         {this.props.mechanic.name} <br/>\r\n                    </div>\r\n                         <img id=\"pictureCar\" src=\"automehanicar.jpg\" alt=\" \"/> <br/>\r\n                         <img id =\"placeIcon\" src=\"location.png\" alt= \" \"/>\r\n                         {this.props.mechanic.address} <br/>\r\n\r\n                    <div id=\"about\">\r\n                        <div id=\"titleAbout\"> About us: </div>  <br/>\r\n                          {this.props.mechanic.description}<br/>\r\n                    </div>\r\n                    <div id=\"Phone\">\r\n                         <img id =\"callIcon\" src=\"call.png\" alt = \" \"/>\r\n                          {this.props.mechanic.phoneNumber}\r\n                    </div> <br/>\r\n                     <button id=\"hireButton\" onClick={this.props.showPayment}> Hire me  {this.props.mechanic.price}&#8364;</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MechanicDetails;","import {\r\n  InfoWindow,\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker\r\n} from \"react-google-maps\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport MechanicDetails from './MechanicDetails';\r\nimport PaymentForm from './PaymentForm';\r\n\r\n    class Map extends React.Component {\r\n\r\n        constructor() {\r\n          super()\r\n            this.state = {\r\n                mechanics: [],\r\n                mapPosition:{\r\n                    lat: 0,\r\n                    lng: 0,\r\n                },\r\n                markerPosition:{\r\n                    lat: 0,\r\n                    lng: 0,\r\n                },\r\n                showPayment: false\r\n            }\r\n        }\r\n\r\n        componentDidMount(){\r\n            const request = \"/mechanics\";\r\n            fetch(request)\r\n            .then(response=>response.json())\r\n            .then(json =>{\r\n                this.setState({\r\n                mechanics: json,\r\n                })\r\n            })\r\n\r\n                if (navigator.geolocation){\r\n                    navigator.geolocation.getCurrentPosition(position =>{\r\n                    this.setState({\r\n                            mapPosition:{\r\n                                lat: parseFloat(position.coords.latitude),\r\n                                lng: parseFloat(position.coords.longitude),\r\n                            },\r\n                            markerPosition:{\r\n                                lat: position.coords.latitude,\r\n                                lng: position.coords.longitude,\r\n                            }\r\n                    })})\r\n                }\r\n        }\r\n\r\n        showPayment() {\r\n            this.setState({\r\n                showPayment: true\r\n            });\r\n        }\r\n\r\n        cancelPayment() {\r\n            this.setState({\r\n                showPayment: false\r\n            });\r\n        }\r\n\r\n        showInfo(mechanic1){\r\n            const mechanicDetails = <MechanicDetails\r\n                                        mechanic={mechanic1}\r\n                                        showPayment={this.showPayment.bind(this)}\r\n                                    />;\r\n            ReactDOM.render(mechanicDetails, document.getElementById('MechanicInf'));\r\n        }\r\n\r\n    render(){\r\n\r\n        const {mechanics, showPayment} = this.state;\r\n            const MapWithAMarker = withScriptjs(withGoogleMap(props =>\r\n                <GoogleMap\r\n                    defaultZoom={13}\r\n                    defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng}}\r\n                >\r\n                    {mechanics.map(mechanic => (\r\n                        <Marker\r\n                            position={{\r\n                                lat: mechanic.longitude,\r\n                                lng: mechanic.latitude\r\n                            }}\r\n                            icon={{\r\n                                url: \"/Icon.jpg\",\r\n                                scaledSize: new window.google.maps.Size(20,20)\r\n                            }}\r\n                        >\r\n                            <InfoWindow>\r\n                                < div onClick={this.showInfo.bind(this, mechanic)}>\r\n                                     {mechanic.name},<br/>&#8364; {mechanic.price}\r\n                                </div>\r\n                            </InfoWindow>\r\n                        </Marker>\r\n                    ))}\r\n                </GoogleMap>\r\n            ));\r\n\r\n        return (\r\n            <div>\r\n                { !showPayment &&\r\n                    <div id=\"mapInf\">\r\n                        <div id=\"mapaDisplay\">\r\n                            <MapWithAMarker\r\n                                googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDmoL5HOyB_ldN_oOPyclF4_yxj3Uhv1vc&v=3.exp&libraries=geometry,drawing,places\"\r\n                                loadingElement={<div style={{ height: `100%` }} />}\r\n                                containerElement={<div style={{ height: `100%` }} />}\r\n                                mapElement={<div style={{ height: `100%` }} />}\r\n                            />\r\n                        </div>\r\n                            <div id=\"MechanicInf\"></div>\r\n                    </div>\r\n                }\r\n                { showPayment && <PaymentForm cancelPayment={this.cancelPayment.bind(this)}/> }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Map;","\r\nconst React = require('react');\r\n\r\n\r\nclass StartMechanic extends React.Component{\r\n\r\n    render () {\r\n\r\n        return (\r\n            <div id=\"firstPage\">\r\n                <div id=\"background\">\r\n                </div>\r\n                <div id=\"startMap\">\r\n                    <button id=\"OpenMap\" onClick={this.props.findMechanic}>FIND MECHANIC </button>\r\n                </div>\r\n            </div>\r\n        )\r\n     };\r\n}\r\n\r\nexport default StartMechanic\r\n","import React from 'react';\nimport Map from \"./Map\";\nimport StartMechanic from \"./StartMechanic\";\n\nclass App extends React.Component {\n\n    constructor (props) {\n        super(props);\n        this.state = {\n            startMechanicPage: true,\n            mapPage: false\n        };\n    }\n    render(){\n\t    const FindMechanic = (event) => {\n            this.setState({\n              startMechanicPage: false,\n              mapPage: true\n\n            });\n        }\n        return (\n            <div>\n                <div>\n                    {this.state.startMechanicPage && <StartMechanic findMechanic={FindMechanic}/>}\n                    {this.state.mapPage &&\n                        <div style={{width: '100%', height: '100%'}}>\n                            <Map/>\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}